-- Q1: Who is the senior most employee based on job title?

select first_name, last_name, title
from employee order by levels  desc limit 1;

-- Q2: Which countries has the most Invoices?

select billing_country ,count (billing_country) as no_of_invoice
from invoice group by billing_country
order by count (billing_country) desc;

-- Q3: What are the top 3 values of total invoice?

select total from invoice order by total desc limit 3;

/* Q4: Which city has the best customers? We would like to throw a promotional Music
Festival in the city we made the most money. Write a query that returns one city that
has the highest sum of invoice totals. Return both the city name & sum of all invoice
totals? */

select billing_city, sum(total) as Total from invoice group by billing_city order by(sum(total)) desc ;

/*Q5: Who is the best customer? The customer who has spent the most money will be
declared the best customer. Write a query that returns the person who has spent the
most money */

select c.customer_id, c.first_name,c.last_name, sum(i.total) as Total
from customer c join invoice i on c.customer_id = i.customer_id 
group by c.customer_id order by (sum(i.total)) desc limit 1;

/* Q6: Write query to return the email, first name, last name, & Genre of all Rock Music
listeners. Return your list ordered alphabetically by email starting with A */

select distinct c.email,c.first_name,c.last_name from customer c
join invoice i on c.customer_id = i.customer_id
join invoice_line il on i.invoice_id = il.invoice_id
join track t on t.track_id = il.track_id
join genre g on g.genre_id  = t.genre_id
where g.name like 'Rock'
order by email;

/*Q7: Let's invite the artists who have written the most rock music in our dataset. Write a
query that returns the Artist name and total track count of the top 10 rock bands */

select a.artist_id,a.name, count(a.artist_id) as total_track_count
from artist a
join album al on a.artist_id = al.artist_id
join track t on al.album_id = t.album_id
join genre g on g.genre_id = t.genre_id
where g.name like 'Rock'
group by a.artist_id
order by total_track_count desc limit 10;

/*Q8: Return all the track names that have a song length longer than the average song length.
Return the Name and Milliseconds for each track. Order by the song length with the
longest songs listed first */

select distinct name , milliseconds from track
where milliseconds > (select avg(milliseconds)  from track)
order by milliseconds desc;

/*Q9: Find how much amount spent by each customer on artists? Write a query to return
customer name, artist name and total spent*/

WITH best_selling_artist AS (
SELECT a.artist_id AS artist_id, a.name AS artist_name, SUM(il.unit_price*il.quantity) AS total_sales
FROM invoice_line il
JOIN track  t ON t.track_id = il.track_id
JOIN album al ON al.album_id = t.album_id
JOIN artist a ON a.artist_id = al.artist_id
GROUP BY 1
ORDER BY 3 DESC
LIMIT 1
)
SELECT c.customer_id, c.first_name, c.last_name, bsa.artist_name, SUM(il.unit_price*il.quantity) AS amount_spent
FROM invoice i
JOIN customer c ON c.customer_id = i.customer_id
JOIN invoice_line il ON il.invoice_id = i.invoice_id
JOIN track t ON t.track_id = il.track_id
JOIN album al ON al.album_id = t.album_id
JOIN best_selling_artist bsa ON bsa.artist_id = al.artist_id
GROUP BY 1,2,3,4
ORDER BY 5 DESC;


/*Q10: We want to find out the most popular music Genre for each country. We determine the
most popular genre as the genre with the highest amount of purchases. Write a query
that returns each country along with the top Genre. For countries where the maximum
number of purchases is shared return all Genres*/

WITH popular_genre AS 
(
SELECT COUNT(il.quantity) AS purchases, c.country, g.name, g.genre_id, 
ROW_NUMBER() OVER(PARTITION BY c.country ORDER BY COUNT(il.quantity) DESC) AS RowNo 
FROM invoice_line il
JOIN invoice i ON i.invoice_id = il.invoice_id
JOIN customer c ON c.customer_id = i.customer_id
JOIN track t ON t.track_id = il.track_id
JOIN genre g ON g.genre_id = t.genre_id
GROUP BY 2,3,4
ORDER BY 2 ASC, 1 DESC
)
SELECT * FROM popular_genre WHERE RowNo <= 1;

/*Q11: Write a query that determines the customer that has spent the most on music for each
country. Write a query that returns the country along with the top customer and how
much they spent. For countries where the top amount spent is shared, provide all
customers who spent this amount */

WITH Customter_with_country AS (
SELECT c.customer_id, c.first_name, c.last_name, i.billing_country,SUM(i.total) AS total_spending,
ROW_NUMBER() OVER(PARTITION BY i.billing_country ORDER BY SUM(i.total) DESC) AS RowNo 
FROM invoice i
JOIN customer c ON c.customer_id = i.customer_id
GROUP BY 1,2,3,4
ORDER BY 4 ASC,5 DESC)
SELECT * FROM Customter_with_country WHERE RowNo <= 1;

